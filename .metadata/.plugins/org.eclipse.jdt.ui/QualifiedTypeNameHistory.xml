<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeAll"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.AfterAll"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.TestInstance"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
    <fullyQualifiedTypeName name="com.cg.model.Song"/>
    <fullyQualifiedTypeName name="javax.servlet.Filter"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="com.cg.filter.CustomFilter"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GatewayFilter"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="com.cg.repository.UserRepository"/>
    <fullyQualifiedTypeName name="com.cg.model.JwtRequest"/>
    <fullyQualifiedTypeName name="com.cg.model.User"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Min"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Max"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.PositiveOrZero"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Digits"/>
    <fullyQualifiedTypeName name="com.cg.exception.SongAlreadyExistException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.cg.model.ErrorResponse"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="org.springframework.util.SerializationUtils"/>
    <fullyQualifiedTypeName name="org.springframework.core.io.buffer.DataBuffer"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="javax.validation.Valid"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Pattern"/>
    <fullyQualifiedTypeName name="com.cg.exception.UserAlreadyExistException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.Query"/>
    <fullyQualifiedTypeName name="com.cg.exception.PlayListAlreadyExistException"/>
    <fullyQualifiedTypeName name="com.cg.exception.PlayListNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestClientException"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Flux"/>
    <fullyQualifiedTypeName name="com.cg.exception.SongNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
</qualifiedTypeNameHistroy>
