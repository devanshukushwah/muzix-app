package com.cg;


import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.cloud.gateway.filter.GlobalFilter;
import org.springframework.context.annotation.Bean;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.server.reactive.ServerHttpRequest;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;




@SpringBootApplication
@EnableDiscoveryClient
public class ApiGatewayApplication {

	public static void main(String[] args) {
		SpringApplication.run(ApiGatewayApplication.class, args);
	}

	@Bean
	public GlobalFilter globalFilter() {
		return (exchange, chain) -> {

			ServerHttpRequest request = exchange.getRequest();
			String path = request.getPath().toString();

			if (path.startsWith("/login") || path.startsWith("/register"))
				return chain.filter(exchange);
			
			
			if (!exchange.getRequest().getHeaders().containsKey(HttpHeaders.AUTHORIZATION)) {
				exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);
				return exchange.getResponse().setComplete();
			}
			
			
			String authHeader = exchange.getRequest().getHeaders().get(HttpHeaders.AUTHORIZATION).get(0);

			String[] parts = authHeader.split(" ");

			if (parts.length != 2 || !"Bearer".equals(parts[0])) {
				exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);
				return exchange.getResponse().setComplete();
			}


			RestTemplate restTemplate = new RestTemplate();
			
			String forObject = null;

			try {
				forObject = restTemplate.getForObject("http://localhost:8888/token?v=" + parts[1], String.class);
			} catch (RestClientException e1) {
				exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);
//				return exchange.getResponse().setComplete();
				return exchange.getResponse().setComplete();
			}

			if(!forObject.equals("valid")) 
			{
				exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);
				return exchange.getResponse().setComplete();

			} 
			
			return chain.filter(exchange);
		};
	}
}
